<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.mapper.DownloadRecordsMapper">

    <resultMap type="com.example.demo.model.DownloadRecords" id="DownloadRecordsMap">
        <result property="downloadId" column="download_id" jdbcType="INTEGER"/>
        <result property="achievementId" column="achievement_id" jdbcType="INTEGER"/>
        <result property="templateId" column="template_id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="downloadTime" column="download_time" jdbcType="TIMESTAMP"/>
        <result property="tableStatus" column="table_status" jdbcType="BOOLEAN"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="DownloadRecordsMap">
        select
download_id, achievement_id, template_id, user_id, download_time, table_status
        from download_records
        where download_id = #{downloadId} and table_status = true
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="downloadId" useGeneratedKeys="true">
        insert into download_records(achievement_id, user_id, download_time, table_status)
        values (#{achievementId}, #{userId}, #{downloadTime}, true)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update download_records
        <set>
            <if test="achievementId != null">
                achievement_id = #{achievementId},
            </if>
            <if test="templateId != null">
                template_id = #{templateId},
            </if>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="downloadTime != null">
                download_time = #{downloadTime},
            </if>
            <if test="tableStatus != null">
                table_status = #{tableStatus},
            </if>
        </set>
        where download_id = #{downloadId}
    </update>

    <!--通过主键逻辑删除-->
    <!--将table_status置false-->
    <delete id="deleteById">
        update download_records
        <set>
            table_status = false
        </set>
        where download_id = #{downloadId}
    </delete>
    
    <!--获取所有行信息-->
    <select id="queryAll" resultMap="DownloadRecordsMap"> 
        select
download_id, achievement_id, template_id, user_id, download_time, table_status
        from download_records
        where table_status = true
    </select>
    
    <!--分页获取所有行信息-->
    <select id="queryAllWithPagination" resultMap="DownloadRecordsMap"> 
        select
download_id, achievement_id, template_id, user_id, download_time, table_status
        from download_records
        where table_status = true
        limit #{offset}, #{limit}
    </select>
</mapper>
